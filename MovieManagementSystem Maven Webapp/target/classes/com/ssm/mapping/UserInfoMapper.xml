<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ssm.dao.UserInfoDAO" >

  <resultMap id="UserInfoResultMap" type="com.ssm.pojo.UserInfo" >
    <id column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="user_name" property="user_name" jdbcType="VARCHAR" />
    <result column="user_password" property="user_password" jdbcType="VARCHAR" />
  	<result column="user_grade" property="user_grade" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="UserInfo_Column_List" >
    user_id, user_name, user_password,user_grade
  </sql>
  
  <!--新增员工-->
  <insert id="insertUserInfo" parameterType="com.ssm.pojo.UserInfo" >
    insert into user_info (user_id, user_name, user_password,user_grade)
    values (#{user_id,jdbcType=INTEGER}, #{user_name,jdbcType=VARCHAR}, #{user_password,jdbcType=VARCHAR}, 
      #{user_grade,jdbcType=INTEGER})
  </insert>
  
  <!-- 根据id删除员工 -->
  <delete id="deleteById" parameterType="java.lang.Integer">
  	delete from user_info
    where user_id = #{user_id,jdbcType=INTEGER}
  </delete>
  
  <!-- 批量删除 -->
  <delete id="deleteUserInfoByBatch" parameterType="java.lang.Integer">
  	delete from user_info where user_id in
  	<foreach item="userInfoId" collection="array" open="(" separator="," close=")">
  		#{userInfoId}
  	</foreach>
  </delete>
    
  <!-- 修改员工信息 -->
  <update id="updateUserInfo" parameterType="com.ssm.pojo.UserInfo">
    update user_info
    set user_name = #{user_name,jdbcType=VARCHAR},
      user_password = #{user_password,jdbcType=VARCHAR},
      user_grade = #{user_grade,jdbcType=INTEGER}
    where user_id = #{user_id,jdbcType=INTEGER}
  </update>
  
    <!-- 根据员工姓名进行查询-->
  <select id="selectByName" resultMap="UserInfoResultMap" parameterType="string"> 
  	 select * from user_info where user_name = #{user_name}
  </select>
  
    <!-- 根据员工id进行查询-->
  <select id="selectById" resultMap="UserInfoResultMap" parameterType="Integer"> 
  	 select * from user_info where user_id = #{user_id}
  </select>
    
  <!-- 查询所有员工信息-->
  <select id="selectUserInfoByPage" resultMap="UserInfoResultMap">
    select * from user_info limit #{startPos},#{pageSize}
  </select>
  
  <!-- 取得记录的总条数 -->
  <select id="getUserInfoCount" resultType="long">
  	select count(*) from user_info
  </select>
  
  <!-- 分页根据员工姓名模糊查询 -->
  <select id="fuzzySelectUserInfoByName" resultMap="UserInfoResultMap">
  	select * from user_info where user_name like CONCAT('%',#{user_name},'%') limit #{startPos},#{pageSize}
  </select>
  
  <!-- 模糊查询时，取得模糊记录的总条数 -->
  <select id="getUserInfoCountByFuzzy" resultType="long" parameterType="String">
  	select count(*) from user_info where user_name like CONCAT('%',#{user_name},'%')
  </select>
  
  	
</mapper>